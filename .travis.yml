---
sudo: required
dist: trusty

language: python
python: "2.7"

env:
  - SITE=test.yml ANSIBLE_VERSION=latest
#  - SITE=test.yml ANSIBLE_VERSION=2.0.1.0
#  - SITE=test.yml ANSIBLE_VERSION=2.0.0.2
#  - SITE=test.yml ANSIBLE_VERSION=2.0.0.1
#  - SITE=test.yml ANSIBLE_VERSION=2.0.0.0
#  - SITE=test.yml ANSIBLE_VERSION=1.9.4
#  - SITE=test.yml ANSIBLE_VERSION=1.9.3
#  - SITE=test.yml ANSIBLE_VERSION=1.9.2
#  - SITE=test.yml ANSIBLE_VERSION=1.9.1
#  - SITE=test.yml ANSIBLE_VERSION=1.9.0.1
#  - SITE=test.yml ANSIBLE_VERSION=1.8.4
#  - SITE=test.yml ANSIBLE_VERSION=1.8.3
#  - SITE=test.yml ANSIBLE_VERSION=1.8.2
#  - SITE=test.yml ANSIBLE_VERSION=1.8.1
#  - SITE=test.yml ANSIBLE_VERSION=1.8
#
#matrix:
#  allow_failures:
#    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.2
#    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.1
#    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.0
#    - env: SITE=test.yml ANSIBLE_VERSION=1.9.1

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y curl

install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install --no-binary ansible ansible; else pip install --no-binary ansible ansible==$ANSIBLE_VERSION; fi

  # Add ansible.cfg to pick up roles path.
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"

  # Install required roles
  - ansible-galaxy install -r tests/requirements.yml --ignore-errors --force

  # Install ansible-lint
  - pip install ansible-lint

script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i tests/inventory tests/prepare.yml --syntax-check
  - ansible-playbook -i tests/inventory tests/$SITE --syntax-check

  # Prepare system for testing
  - ansible-playbook -i tests/inventory tests/prepare.yml --connection=local --sudo

  # Test preparations
  - id -u dummy1
  - id -u dummy2
  - id -u dummy3
  - egrep -q -i "^dummy_group" /etc/group
  - egrep -q -i "^dummy_group1" /etc/group
  - egrep -q -i "^dummy_group2" /etc/group
  - egrep -q -i "^dummy_group3" /etc/group
  - sudo test -e /home/dummy1/.ssh/authorized_keys
  - sudo test -e /home/dummy2/.ssh/authorized_keys
  - sudo test -e /home/dummy3/.ssh/authorized_keys

  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # ansible-lint checks for best practice
  - ansible-lint tests/$SITE

  # Check groups
  - groups travis_admin | grep travis_admin
  - groups travis_admin | grep travis_group
  - groups travis_admin2 | grep travis_admin
  - groups travis_admin2 | grep travis_group
  - groups travis_normal | grep travis_normal
  - groups travis_normal | grep travis_group

  - egrep -q -i "^usergroup1" /etc/group
  - egrep -q -i "^usergroup2" /etc/group

  # Check removed groups
  - egrep -q -v -i "^dummy_group1" /etc/group

  # Check users
  - id -u travis_admin
  - id -u travis_admin2
  - id -u travis_normal

  # Check removed users
  - egrep -q -v -i "^dummy1" /etc/passwd
  - egrep -q -v -i "^dummy2" /etc/passwd

  # sudo
  - sudo test -e /etc/sudoers.d/10-ansible-managed
  - sudo grep travis_admin /etc/sudoers.d/10-ansible-managed

  # ssh
  - sudo egrep -i 'IhUs7j3E9ivZg9yUFkck6QSEu3bUMko+q6gtSDcdkoACp8zMzDxBhbEWCUUF' /home/travis_admin2/.ssh/authorized_keys
  - sudo egrep -i '/sczyeR8VIeiORbbVu1+rdnA/l1eHdd8OvX+MymDWdQjzmCtJahyapXoe2w5' /home/travis_admin2/.ssh/authorized_keys

  # Ensure ssh is removed from removed users
#  - test -e /home/dummy1/.ssh/authorized_keys && (echo 'File removed: fail' && exit 1) || (echo 'File removed: pass' && exit 0)
#  - test -e /home/dummy2/.ssh/authorized_keys && (echo 'File removed: fail' && exit 1) || (echo 'File removed: pass' && exit 0)
  - sudo egrep -v -i 'IhUs7j3E9ivZg9yUFkck6QSEu3bUMko+q6gtSDcdkoACp8zMzDxBhbEWCUUF' /home/dummy1/.ssh/authorized_keys
  - sudo egrep -v -i '/sczyeR8VIeiORbbVu1+rdnA/l1eHdd8OvX+MymDWdQjzmCtJahyapXoe2w5' /home/dummy1/.ssh/authorized_keys
  - sudo egrep -v -i 'IhUs7j3E9ivZg9yUFkck6QSEu3bUMko+q6gtSDcdkoACp8zMzDxBhbEWCUUF' /home/dummy2/.ssh/authorized_keys
  - sudo egrep -v -i '/sczyeR8VIeiORbbVu1+rdnA/l1eHdd8OvX+MymDWdQjzmCtJahyapXoe2w5' /home/dummy2/.ssh/authorized_keys

  # sshd_config
  - grep 'PasswordAuthentication no' /etc/ssh/sshd_config
  - grep 'PermitRootLogin no' /etc/ssh/sshd_config
  - grep 'Port 2828' /etc/ssh/sshd_config


after_failure:
  # run playbook again to see idempotence failures
  - ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo -vvv
  - sudo cat /etc/passwd
  - sudo cat /etc/group
  - sudo cat /etc/sudoers.d/10-ansible-managed
  - sudo cat /etc/ssh/sshd_config
  - sudo cat /home/dummy1/.ssh/authorized_keys
  - sudo tail -n150 /var/log/syslog
  - ansible --version

notifications:
  slack: ambimax:2MlPTX9bY9aPxCPhJGxHKIT6
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
