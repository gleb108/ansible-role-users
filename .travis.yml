---
sudo: required
dist: trusty

language: python
python: "2.7"

env:
  - SITE=test.yml ANSIBLE_VERSION=latest
#  - SITE=test.yml ANSIBLE_VERSION=2.0.1.0
#  - SITE=test.yml ANSIBLE_VERSION=2.0.0.2
#  - SITE=test.yml ANSIBLE_VERSION=2.0.0.1
#  - SITE=test.yml ANSIBLE_VERSION=2.0.0.0
#  - SITE=test.yml ANSIBLE_VERSION=1.9.4
#  - SITE=test.yml ANSIBLE_VERSION=1.9.3
#  - SITE=test.yml ANSIBLE_VERSION=1.9.2
#  - SITE=test.yml ANSIBLE_VERSION=1.9.1
#  - SITE=test.yml ANSIBLE_VERSION=1.9.0.1
#  - SITE=test.yml ANSIBLE_VERSION=1.8.4
#  - SITE=test.yml ANSIBLE_VERSION=1.8.3
#  - SITE=test.yml ANSIBLE_VERSION=1.8.2
#  - SITE=test.yml ANSIBLE_VERSION=1.8.1
#  - SITE=test.yml ANSIBLE_VERSION=1.8
#
#matrix:
#  allow_failures:
#    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.2
#    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.1
#    - env: SITE=test.yml ANSIBLE_VERSION=2.0.0.0
#    - env: SITE=test.yml ANSIBLE_VERSION=1.9.1

before_install:
  - sudo apt-get update -qq
  - sudo apt-get install -y curl

install:
  # Install Ansible.
  - if [ "$ANSIBLE_VERSION" = "latest" ]; then pip install --no-binary ansible ansible; else pip install --no-binary ansible ansible==$ANSIBLE_VERSION; fi

  # Add ansible.cfg to pick up roles path.
  - "{ echo '[defaults]'; echo 'roles_path = ../'; } >> ansible.cfg"

  # Install ansible-lint
  - pip install ansible-lint

script:
  # Check the role/playbook's syntax.
  - ansible-playbook -i tests/inventory tests/$SITE --syntax-check

  # Run the role/playbook with ansible-playbook.
  - ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # ansible-lint checks for best practice
  - ansible-lint tests/$SITE

  # Check groups
  - grep travis_admin /etc/group
  - grep travis_group /etc/group
  - grep travis_normal /etc/group
  - grep usergroup1 /etc/group
  - grep usergroup2 /etc/group

  # Check users
  - grep travis_admin /etc/passwd
  - grep travis_normal /etc/passwd

  # Check removed users
  - grep -v dummy1 /etc/passwd
  - grep -v dummy2 /etc/passwd

  # sudo
  - test -e /etc/sudoers.d/10-ansible-managed
  - grep travis_admin /etc/sudoers.d/10-ansible-managed

  # ssh
  - grep ACp8zMzDxBhbEWCUUF /home/travis_admin2/.ssh/authorized_keys
  - grep QjzmCtJahyapXoe2w5 /home/travis_admin2/.ssh/authorized_keys

  # Ensure ssh is removed from revomved users
  - test -e /home/dummy1/.ssh/authorized_keys && (echo 'File removed: fail' && exit 1) || (echo 'File removed: pass' && exit 0)
  - test -e /home/dummy2/.ssh/authorized_keys && (echo 'File removed: fail' && exit 1) || (echo 'File removed: pass' && exit 0)
  - grep -v ACp8zMzDxBhbEWCUUF /home/dummy1/.ssh/authorized_keys
  - grep -v QjzmCtJahyapXoe2w5 /home/dummy1/.ssh/authorized_keys

  # sshd_config
  - grep 'PasswordAuthentication no' /etc/ssh/sshd_config
  - grep 'PermitRootLogin no' /etc/ssh/sshd_config
  - grep 'Port 2828' /etc/ssh/sshd_config


after_failure:
  # run playbook again to see idempotence failures
  - ansible-playbook -i tests/inventory tests/$SITE --connection=local --sudo -vvv
  - cat /etc/passwd
  - cat /etc/group
  - cat /etc/sudoers.d/10-ansible-managed
  - cat /etc/ssh/sshd_config
  - cat /home/dummy1/.ssh/authorized_keys
  - sudo tail -n150 /var/log/syslog
  - ansible --version

notifications:
  slack: ambimax:2MlPTX9bY9aPxCPhJGxHKIT6
  webhooks: https://galaxy.ansible.com/api/v1/notifications/